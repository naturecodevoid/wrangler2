import React from "react";
import type { Config } from "../config";
import type { Route } from "../config/environment";
import type { Entry } from "../entry";
import type { EnablePagesAssetsServiceBindingOptions } from "../miniflare-cli/types";
import type { AssetPaths } from "../sites";
import type { CfWorkerInit } from "../worker";
import type { Plugin } from "esbuild";
export declare type DevProps = {
    name: string | undefined;
    noBundle: boolean;
    entry: Entry;
    initialPort: number;
    initialIp: string;
    inspectorPort: number;
    rules: Config["rules"];
    accountId: string | undefined;
    initialMode: "local" | "remote";
    jsxFactory: string | undefined;
    jsxFragment: string | undefined;
    tsconfig: string | undefined;
    upstreamProtocol: "https" | "http";
    localProtocol: "https" | "http";
    localUpstream: string | undefined;
    localPersistencePath: string | null;
    liveReload: boolean;
    bindings: CfWorkerInit["bindings"];
    define: Config["define"];
    crons: Config["triggers"]["crons"];
    queueConsumers: Config["queues"]["consumers"];
    isWorkersSite: boolean;
    assetPaths: AssetPaths | undefined;
    assetsConfig: Config["assets"];
    compatibilityDate: string;
    compatibilityFlags: string[] | undefined;
    usageModel: "bundled" | "unbound" | undefined;
    minify: boolean | undefined;
    legacyNodeCompat: boolean | undefined;
    nodejsCompat: boolean | undefined;
    build: Config["build"];
    env: string | undefined;
    legacyEnv: boolean;
    zone: string | undefined;
    host: string | undefined;
    routes: Route[] | undefined;
    inspect: boolean;
    onReady: ((ip: string, port: number) => void) | undefined;
    showInteractiveDevSession: boolean | undefined;
    forceLocal: boolean | undefined;
    enablePagesAssetsServiceBinding?: EnablePagesAssetsServiceBindingOptions;
    firstPartyWorker: boolean | undefined;
    sendMetrics: boolean | undefined;
    testScheduled: boolean | undefined;
    experimentalLocal: boolean | undefined;
    experimentalLocalRemoteKv: boolean | undefined;
    plugins: Plugin[] | undefined;
};
export declare function DevImplementation(props: DevProps): JSX.Element;
export interface DirectorySyncResult {
    name: string;
    removeCallback: () => void;
}
declare const _default: React.ComponentType<DevProps>;
export default _default;
